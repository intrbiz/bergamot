<!DOCTYPE balsa SYSTEM "http://balsa.intrbiz.net/balsa.dtd">
<?RenderLibrary com.intrbiz.balsa?>
<!-- The index view -->
<fragment xmlns="com.intrbiz.balsa">
	<div class="col12" style="margin-bottom: 20px;">
		<h2>Exclude Time Periods</h2>
		<p class="text-body">
			A time period may eclude other time periods, for example: 
			if we have a time period defined for bank holidays and 
			we do not with to execute checks during a bank holiday, 
			we can exclude the bank holiday time period from the 
			check time period. 
		</p>
    	<ul id="excludes">
	    	<data-set var="exclude" value="#{configuration.excludes}">
	    		<li>
    				<label for="excludes[#{exclude_rownum}]">#{if(exclude_rownum == 0, 'Exclude', 'and')}</label>
    				<select name="excludes[#{exclude_rownum}]" id="extends_#{exclude_rownum}">
    					<data-set var="template" value="#{templates}">
    						<option rendered="#{exclude == template.name}" selected="selected" value="#{template.name}">#{coalesce(template.summary, template.name)}</option>
    						<option rendered="#{exclude != template.name}" value="#{template.name}">#{coalesce(template.summary, template.name)}</option>
    					</data-set>
    				</select>
   					<a class="remove" href="#remove">Remove</a>
   				</li>
   			</data-set>
   			<li id="add_exclude_row">
   				<!-- this select is used only for a template -->
  				<select id="available_excludes" style="display: none;">
   					<data-set var="template" value="#{templates}">
   						<option value="#{template.name}">#{coalesce(template.summary, template.name)}</option>
   					</data-set>
   				</select>
  				<a class="add" id="add_exclude" href="#add">Exclude Time Period</a>
   			</li>
  		</ul>
	</div>
	<script type="text/javascript">
		(function() {
		
			function update_excludes() {
				$('#excludes select').each(function(i, e) {
					if ($(e).attr('id') != 'available_excludes') {
						$(e).attr('id', 'extends_' + i);
						$(e).attr('name', 'extends[' + i + ']');
						var lb = $(e).siblings('label');
						$(lb).attr('for', 'extends[' + i + ']');
						$(lb).text(i == 0 ? 'Inherit from' : 'and from');
					}
				});
			}
			
			function remove_exclude(ev) {
				ev.preventDefault();
				$(this).parent().remove();
				update_excludes();
			}
			
			function add_exclude(ev) {
				ev.preventDefault();
				// label
				var lb = document.createElement('label');
				// select
				var sel = $('#available_excludes').clone();
				$(sel).attr('id', '');
				$(sel).attr('name', '');
				$(sel).attr('style', '');
				// remove
				var rm  = document.createElement('a');
				$(rm).attr('href', '#remove');
				$(rm).text('Remove');
				$(rm).attr('class', 'remove');
				// containers
				var li = document.createElement('li');
				$(li).html([lb, sel, rm]);
				// insert
				$('#add_exclude_row').before(li);
				// actions
				$(rm).click(remove_exclude);
				// update
				update_excludes();
			}
			
			// setup
			$('#add_exclude').click(add_exclude);
			$('#excludes .remove').click(remove_exclude);
		})();
	</script>
</fragment>