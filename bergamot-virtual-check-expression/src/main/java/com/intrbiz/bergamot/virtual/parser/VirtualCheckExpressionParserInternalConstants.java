/* Generated By:JavaCC: Do not edit this line. VirtualCheckExpressionParserInternalConstants.java */
package com.intrbiz.bergamot.virtual.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface VirtualCheckExpressionParserInternalConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LUUID = 6;
  /** RegularExpression Id. */
  int XOR = 7;
  /** RegularExpression Id. */
  int OR = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int STCOMP = 11;
  /** RegularExpression Id. */
  int EDCOMP = 12;
  /** RegularExpression Id. */
  int HOST = 13;
  /** RegularExpression Id. */
  int SERVICE = 14;
  /** RegularExpression Id. */
  int TRAP = 15;
  /** RegularExpression Id. */
  int RESOURCE = 16;
  /** RegularExpression Id. */
  int CLUSTER = 17;
  /** RegularExpression Id. */
  int LON = 18;
  /** RegularExpression Id. */
  int LBOOLEAN = 19;
  /** RegularExpression Id. */
  int HEXCHAR = 20;
  /** RegularExpression Id. */
  int ESCAPECHAR = 21;
  /** RegularExpression Id. */
  int UESCAPECHAR = 22;
  /** RegularExpression Id. */
  int LSTRING = 23;
  /** RegularExpression Id. */
  int QUOTE = 24;
  /** RegularExpression Id. */
  int ENDQUOTE = 26;
  /** RegularExpression Id. */
  int CHAR = 27;
  /** RegularExpression Id. */
  int CNTRLESC = 28;
  /** RegularExpression Id. */
  int HEX = 30;
  /** RegularExpression Id. */
  int HEXESC = 31;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STRINGSTATE = 1;
  /** Lexical state. */
  int ESCSTATE = 2;
  /** Lexical state. */
  int HEXSTATE = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<LUUID>",
    "<XOR>",
    "<OR>",
    "<AND>",
    "<NOT>",
    "\"(\"",
    "\")\"",
    "\"host\"",
    "\"service\"",
    "\"trap\"",
    "\"resource\"",
    "\"cluster\"",
    "\"on\"",
    "<LBOOLEAN>",
    "<HEXCHAR>",
    "<ESCAPECHAR>",
    "<UESCAPECHAR>",
    "<LSTRING>",
    "\"\\\"\"",
    "\"\\\\\"",
    "<ENDQUOTE>",
    "<CHAR>",
    "<CNTRLESC>",
    "\"u\"",
    "<HEX>",
    "<HEXESC>",
  };

}
